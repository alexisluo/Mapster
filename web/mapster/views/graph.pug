extends layout

block content
	script(src='http://d3js.org/d3.v3.min.js')
	script.
		var graphJson = !{JSON.stringify(graph)};
		console.info(graphJson);

		var graph = JSON.parse(graphJson);
		
		var width = 960,
		    height = 800;

		var force = d3.layout.force().size([width, height]);

		var svg = d3.select("body").append("svg")
		    .attr("width", width)
		    .attr("height", height);

		force.nodes(graph.nodes)
		    .links(graph.links)
		    .linkDistance(300) //指定连线长度
		force.start();

		var color = d3.scale.category20();

		svg.selectAll(".nodes")
		    .data(graph.nodes)
		    .enter()
		    .append("circle")
		    .attr("class", "nodes")
		    .attr("cx", function(d) { return d.x; })
		    .attr("cy", function(d) { return d.y; })  

		var link = svg.selectAll(".link")
		    .data(graph.links)
		    .enter().append("line")
		    .attr("class", "link")
		    .style("stroke-width", function(d) {
		        return Math.sqrt(d.value);
		    });

		var node = svg.selectAll(".node")
		      .data(graph.nodes)
		    .enter().append("g")
		    .attr("class", "node")
		      .call(force.drag);

		node.append("circle")
		      .attr("r", 30)
		      .style("fill", function(d) {
		              return color(d.group);
		          })

		node.append("text")
		      .attr("dx", 5)
		      .attr("dy", ".12em")
		      .text(function(d) { return d.name });

		force.on("tick", function() {
		    link.attr("x1", function(d) { return d.source.x; })
		        .attr("y1", function(d) { return d.source.y; })
		        .attr("x2", function(d) { return d.target.x; })
		        .attr("y2", function(d) { return d.target.y; });

		    node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

		    node.attr("cx", function(d) { return d.x; })
		        .attr("cy", function(d) { return d.y; });
		  });